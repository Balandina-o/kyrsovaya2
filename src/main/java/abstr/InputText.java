package abstr;

/**
 * Абстрактный класс InputText отвечающий за задание общей логики-классам наследникам,
 * Задача которых - проверка на корректность вводимых значений
 * @author group2
 * @version 1.0
 */
public abstract class InputText{
    /** Объявление строковой переменной, содержащей имя проверяемого текстового поля */
    private String name;

    /** Объявление строковой переменной, содержащей значение, введенное пользователем в проверяемое такосовое поле */
    private final String text;

    /** Объявление строковой переменной-константы, которая содержит в себе "реакцию" на нарушение условия, которое
     * обязано выполнятся для всех классов наследников - поле не должно быть пустым */
    private static final String cannotBeEmptyMessage = "поле не может быть пустым";
    /**
     * Реализация одного из конструкторов абстрактного класса класса
     * @param name - имя проверяемого текстового поля
     * @param text - текст, введенный пользователем в проверяемое поле
     */
    public InputText(String name, String text) {
        this.name = name;
        this.text = text;
    }
    /**
     * Реализация одного из конструкторов абстрактного класса класса
     * @param text - текст, введенный пользователем в проверяемое поле
     */
    public InputText(String text) {
        this.text = text;
    }
    /**
     * Создание абстрактного метода
     *
     * @return the double
     * @throws Exception - исключение, которое будет выбрасываться при некорректно введенных параметрах
     * в поля, за проверку которых отвечают классы-наследники
     */
    protected abstract double parse() throws Exception;
    /**
     * Получение имени данного текстового поля
     * @return the field name - возвращает имя текстового поля
     */
    public String getFieldName() {
        return this.name;
    }

    /**
     * Создание метода, проверяющего, не является ли введенное пользователем значение пустым
     *
     * @return the value - корректное значение, получаемое после проверки введенного пользователем значения в методе parse
     * @throws Exception - исключение, выбрасывающееся при пустом поле
     */
    public double getValue() throws Exception {
        if (this.text == "") {
            throw new Exception(InputText.cannotBeEmptyMessage);
        }

        return this.parse();
    }
    /**
     * Получение введенного пользователем текста в проверяемое текстовоеполе
     * @return text - возвращает значение, введенное пользователем в проверяемое текстовое поле
     */
    public String getText() {
        return text;
    }

}
